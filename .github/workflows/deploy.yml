name: "🚀 プロジェクトをデプロイ"

on:
  push:
    branches: [ main ]
    paths-ignore:
      - "**.md"
      - ".github/**"
  workflow_dispatch:

jobs:
  detect-changes:
    name: 🔍 変更検出
    runs-on: ubuntu-latest
    outputs:
      api-server-changed: ${{ steps.filter.outputs.api-server }}
      beatfolio-changed: ${{ steps.filter.outputs.beatfolio }}
    steps:
      - name: 📥 コードのチェックアウト
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            api-server:
              - 'apps/api-server/**'
              - 'packages/**'
              - 'turbo.json'
              - 'package.json'
            beatfolio:
              - 'apps/beatfolio/**'
              - 'packages/**'
              - 'turbo.json'
              - 'package.json'

  build-all:
    name: 🏗️ 全アプリのビルド
    runs-on: ubuntu-latest
    steps:
      - name: 📥 コードのチェックアウト
        uses: actions/checkout@v4
      
      - name: 📦 依存関係のインストール
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      
      - name: 📦 パッケージインストール
        run: npm ci
      
      - name: 🏗️ 全体ビルド
        run: npx turbo run build
        
      - name: 🧪 全体テスト
        run: npx turbo run test
        continue-on-error: true
      
      - name: 📤 beatfolioビルドのアップロード
        uses: actions/upload-artifact@v3
        with:
          name: beatfolio-build
          path: apps/beatfolio/.next
          retention-days: 1
      
      - name: 📤 APIサーバービルドのアップロード
        uses: actions/upload-artifact@v3
        with:
          name: api-server-build
          path: apps/api-server/.next
          retention-days: 1

  deploy-beatfolio:
    name: 🚀 Beatfolioデプロイ
    needs: [detect-changes, build-all]
    if: needs.detect-changes.outputs.beatfolio-changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: 📥 コードのチェックアウト
        uses: actions/checkout@v4

      - name: 📥 ビルド成果物のダウンロード
        uses: actions/download-artifact@v3
        with:
          name: beatfolio-build
          path: apps/beatfolio/.next

      - name: 🔧 Node.js環境のセットアップ
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: 📦 Vercel CLIのインストール
        run: npm install -g vercel

      - name: 🚀 Vercelへのデプロイ
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_BEATFOLIO_PROJECT_ID }}
        run: |
          cd apps/beatfolio
          vercel deploy --prod --token=${VERCEL_TOKEN}

  deploy-api-server:
    name: 🚀 APIサーバーデプロイ
    needs: [detect-changes, build-all]
    if: needs.detect-changes.outputs.api-server-changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: 📥 コードのチェックアウト
        uses: actions/checkout@v4

      - name: 📥 ビルド成果物のダウンロード
        uses: actions/download-artifact@v3
        with:
          name: api-server-build
          path: apps/api-server/.next

      - name: 🔧 Node.js環境のセットアップ
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: 📦 Vercel CLIのインストール
        run: npm install -g vercel

      - name: 🚀 Vercelへのデプロイ
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_API_PROJECT_ID }}
        run: |
          cd apps/api-server
          vercel deploy --prod --token=${VERCEL_TOKEN}

  notify-success:
    name: ✅ デプロイ成功通知
    needs: [deploy-beatfolio, deploy-api-server]
    if: success()
    runs-on: ubuntu-latest
    steps:
      - name: 📢 成功通知の送信
        run: echo "すべてのデプロイが正常に完了しました"
